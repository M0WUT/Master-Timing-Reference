name: Kicad deployment
on:
  push:
    branches: [ main ]
jobs:
  artifacts:
    runs-on: ubuntu-latest
    container:
      image: kicad/kicad:nightly-202404
      options: --user root
    steps:
      - name: Fix home directory and install dependencies
        run: |
          apt update
          apt install -y tree python3-pip protobuf-compiler
          pwd
          tree
          HOME=/home/kicad/
          cd
          pwd
          tree

      - name: Checkout project repo
        uses: actions/checkout@v4
        with:
          path: main

      - name: Checkout M0WUT Libraries
        uses: actions/checkout@v4
        with:
          repository: "M0WUT/kicad_libraries"
          path: wut-libraries

      - name: Checkout Interactive HTML BoM
        uses: actions/checkout@v4
        with:
          repository: "openscopeproject/InteractiveHtmlBom"
          path: ibom

      - name: Checkout M0WUT Kicad Releaser
        uses: actions/checkout@v4
        with:
          repository: "M0WUT/kicad_releaser"
          path: kicad_releaser

      - name: Install Python dependencies
        run: pip install --break-system-packages -r kicad_releaser/requirements.txt

      - name: Generate board images
        run: |
          pwd 
          tree
          kicad-cli version
          rm -r .config/kicad/8.99/*
          cp -r kicad_releaser/kicad_settings/* .config/kicad/8.99
          sed -i "s#PATH_TO_WUT_LIBRARIES#$(readlink -f wut-libraries)#" ~/.config/kicad/8.99/kicad_common.json
          mkdir kicad_cli_output
          cd checkout
          kicad-cli pcb render --side top --background opaque -o ../kicad_cli_output/front_render.png "`ls | grep ".kicad_pcb"`"
          kicad-cli pcb render --side bottom --background opaque -o ../kicad_cli_output/back_render.png "`ls | grep ".kicad_pcb"`"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: /github/home/build/

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: artifacts
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 
      - name: Webpage URL
        run: echo ${{ steps.deployment.outputs.page_url }}

    
      
      

      
          
